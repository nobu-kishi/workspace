<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repository.UserMapper">
	<!-- マッピング定義(ユーザー) -->
	<resultMap type="com.example.domain.user.model.MUser" id="user">
		<id column="employee_id" property="userId" />
		<result column="password" property="password" />
		<result column="user_name" property="userName" />
		<result column="birthday" property="birthday" />
		<result column="age" property="age" />
		<result column="gender" property="gender" />
		<result column="department_id" property="departmentId" />
		<result column="role" property="role" />
	</resultMap>



	<!-- ユーザー1件登録 -->
	<insert id="insertOne">
		insert into m_user(
		employee_id
		, password
		, user_name
		,
		birthday
		, age
		, gender
		, department_id
		, role
		)
		values (
		#{userId}
		,
		#{password}
		, #{userName}
		, #{birthday}
		, #{age}
		, #{gender}
		,
		#{departmentId}
		, #{role}
		)
	</insert>

	<!-- ユーザー複数件取得 -->
	<select id="findMany" resultType="MUser">
		select *
		from m_user
		<where>
			<if test="userId != null">
				employee_id like '%' || #{userId} || '%'
			</if>
			<if test="userName != null">
				and user_name like '%' || #{userName} ||
				'%'
			</if>
		</where>
	</select>

	<!-- ユーザー1件検索 -->
	<select id="findOne" resultMap="user">
		select
		m_user.employee_id
		,
		m_user.password
		, m_user.user_name
		, m_user.birthday
		, m_user.age
		,
		m_user.gender
		, m_department.department_id
		,
		m_department.department_name
		, t_salary.employee_id as salary_employee_id
		,
		t_salary.year_month as salary_year_month
		, t_salary.salary as
		salary_salary
		from m_user
		left join
		m_department on m_user.department_id
		= m_department.department_id
		left join
		t_salary on m_user.employee_id =
		t_salary.employee_id
		where
		m_user.employee_id = #{userId}
	</select>


	<!-- ユーザー1件更新 -->
	<update id="updateOne">
		update m_user
		set
		password = #{password}
		,user_name =
		#{userName}
		where
		employee_id = #{userId}
	</update>

	<!-- ユーザー1件削除 -->
	<delete id="deleteOne">
		delete from
		m_user
		where
		employee_id = #{userId}
	</delete>
</mapper>