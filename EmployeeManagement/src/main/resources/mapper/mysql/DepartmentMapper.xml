<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Mapperとxmlのマッピング -->
<mapper namespace="com.example.repository.DepartmentMapper">
	<!-- マッピング定義(ユーザー) -->
	<!-- <resultMap type="com.example.domain.user.model.Employees" id="Employees">
		<id column="employee_id" property="employeeId" /> <result column="employee_password"
		property="employeePassword" /> <result column="employee_name" property="employeeName"
		/> <result column="employee_phone;" property="employeePhone;" /> <result
		column="employee_email" property="employeeEmail" /> <result column="employee_join_date"
		property="employeeJoinDate" /> <result column="department_id" property="departmentId"
		/> <collection property="departmentList" resultMap="department"/> ofType="com.example.domain.user.model.Department"
		columnPrefix="department_" /> <collection property="salesList" resultMap="sales"
		ofType="com.example.domain.user.model.Sales" />columnPrefix="sales_" /> </resultMap> -->

	<!-- マッピング定義(部門) -->
	<resultMap type="com.example.domain.user.model.Department"
		id="departmentCount">
		<id column="department_id" property="departmentId" />
		<result column="department_name" property="departmentName" />
		<result column="profit_count" property="profitCount" />
		<result column="customer_count" property="customerCount" />
		<result column="profit_avg" property="profitAvg" />
	</resultMap>

	<!-- マッピング定義(営業成績) -->
	<!-- <resultMap type="com.example.domain.user.model.Sales" id="sales"> <id
		column="employee_id" property="employeeId" /> <result column="area" property="area"
		/> <result column="profit" property="profit" /> <result column="customer"
		property="customer" /> <result column="update_time" property="updateTime"
		/> <collection property="employeesList" resultMap="employees" /> </resultMap> -->


	<!-- マッピング定義(部門一覧) -->
	<resultMap
		type="com.example.domain.user.model.DepartmentSector"
		id="DepartmentSector">
		<id column="department_id" property="departmentId" />
		<id column="department_name" property="departmentName" />
		<result column="employee_exsits" property="employeeExsits" />
		<result column="profit" property="profit" />
		<result column="customer" property="customer" />
		<result column="update_time" property="updateTime" />
	</resultMap>


	<!-- ■追加課題A -->
	<!-- 部門一覧取得 -->
	<select id="getDepartments" resultType="departmentCount">
		SELECT
		d.department_id
		,
		d.department_name
		, SUM(s.profit) AS profit_count
		, SUM(s.customer) AS
		customer_count
		, FLOOR(AVG(s.profit)) AS profit_avg
		FROM
		departments d
		JOIN
		employees e ON e.department_id = d.department_id
		JOIN
		sales s ON
		e.employee_id = s.employee_id
		WHERE
		e.employee_exsits= 1
		GROUP BY
		d.department_id
		,e.employee_exsits = 1
	</select>

	<!-- 部署別社員一覧取得 -->
	<select id="departmentsSales" resultType="DepartmentSector">
		SELECT
		e.employee_id
		,e.employee_name
		,s.area
		,s.profit
		,s.customer
		,s.update_time
		FROM employees e
		JOIN sales s
		ON e.employee_id =
		s.employee_id
		JOIN
		departments d
		ON e.department_id = d.department_id
		WHERE d.department_id
		=
		#{departmentId}

		<!-- TODO:動的にemployee_exsitsで分岐させる -->
	</select>

	<!-- 社員一覧取得 -->
	<select id="allSales" resultType="DepartmentSector">
		SELECT
		e.employee_id
		,e.employee_name
		,e.employee_exsits
		,s.area
		,s.profit
		,s.customer
		,s.update_time
		FROM employees e
		JOIN sales s
		ON e.employee_id =
		s.employee_id
		JOIN
		departments d
		ON e.department_id = d.department_id
	</select>



	<!-- 部署別従業員売上取得（1件） -->
	<select id="personalSales" resultMap="DepartmentSector">
		SELECT
		e.employee_id
		,e.employee_name
		,s.area
		,s.profit
		,s.customer
		,s.update_time
		FROM
		employees e
		JOIN sales s
		ON e.employee_id =
		s.employee_id
		JOIN
		departments
		d
		ON e.department_id = d.department_id
		WHERE e.employee_id
		=
		#{employeeId}
	</select>

	<!-- 従業員売件更新（1件） -->
	<update id="updateSales">
		UPDATE sales
		SET
		area = #{area}
		,profit = #{profit}
		,customer = #{customer}
		,update_time = #{updateTime}
		WHERE
		employee_id =
		#{employeeId}
	</update>



</mapper>